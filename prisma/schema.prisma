// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"] // Agregar "windows" aqu√≠
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cobro {
  id                   Int          @id @default(autoincrement())
  documento            Int
  nombres              String
  apellidos            String
  direccion            String
  telefono             String 
  correoElectronico    String
  identificacionFiscal Int
  nro_cuenta           Int
  banco                Banco        @relation(fields: [bancoId], references: [id_banco])
  bancoId              Int
  tipoCuenta           TipoCuenta   @relation(fields: [tipoCuentaId], references: [id_cuenta])
  tipoCuentaId         Int
  contrato             Contrato     @relation(fields: [contratoId], references: [id_contrato])
  contratoId           Int
  actividades          Actividades[]
}

model Banco {
  id_banco Int      @id @default(autoincrement())
  nombre   String
  cobros   Cobro[]
}

model TipoCuenta {
  id_cuenta   Int    @id @default(autoincrement())
  tipo_cuenta String
  cobros      Cobro[]
}

model Contrato {
  id_contrato      Int      @id @default(autoincrement())
  numero_contrato  Int
  objeto_contrato  String
  ano_contrato     Int
  valor_mes        Float
  dependencia      String
  cobros           Cobro[]
}

model Actividades {
  id_actividades     Int          @id @default(autoincrement())
  objeto_contractual String
  cobro              Cobro        @relation(fields: [cobroId], references: [id])
  cobroId            Int
  comentarios        Comentarios[]
  images             Images[]
}

model Comentarios {
  id              Int          @id @default(autoincrement())
  actividades     Actividades  @relation(fields: [id_actividades], references: [id_actividades])
  id_actividades  Int
  comentario      String
}

model Images {
  id             Int          @id @default(autoincrement())
  actividades    Actividades  @relation(fields: [id_actividades], references: [id_actividades])
  id_actividades Int
  name           String
  path           String
  createdAt      DateTime     @default(now())
}

model User {
  id                Int      @id @default(autoincrement())
  cedula            String   @unique
  nombre_completo   String
  correoElectronico String   @unique
  contrasena        String
  tokenRecuperar    String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}